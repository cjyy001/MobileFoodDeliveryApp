class Wishlist:
    """
    Represents a wishlist where users can save items for future orders.
    """

    def __init__(self):
        """
        Initializes an empty wishlist.
        """
        self.items = []

    def add_item(self, item):
        """Add an item to the wishlist."""
        if item not in self.items:
            self.items.append(item)

    def remove_item(self, item):
        """Remove an item from the wishlist."""
        if item in self.items:
            self.items.remove(item)

    def get_items(self):
        """Return the list of items in the wishlist."""
        return self.items

    def view_wishlist(self):
        """
        Returns the current wishlist.

        Returns:
            list: A list of items in the wishlist.
        """
        return self.items


import unittest


class TestWishlist(unittest.TestCase):
    """
    Unit tests for the Wishlist class.
    """

    def setUp(self):
        """
        Sets up the test environment by creating a Wishlist object.
        """
        self.wishlist = Wishlist()

    def test_add_item(self):
        self.wishlist.add_item("Burger")
        self.assertIn("Burger", self.wishlist.view_wishlist())

    def test_remove_item(self):
        self.wishlist.add_item("Pizza")
        self.wishlist.remove_item("Pizza")
        self.assertNotIn("Pizza", self.wishlist.view_wishlist())

    def test_view_wishlist(self):
        self.wishlist.add_item("Burger")
        self.wishlist.add_item("Pizza")
        self.assertEqual(self.wishlist.view_wishlist(), ["Burger", "Pizza"])


if __name__ == '__main__':
    unittest.main()
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
